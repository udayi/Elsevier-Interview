package com.elsevier.education;

/**
TODO refactor the Car to use dependency injection of the engine
TODO allow use of either a gas engine or electric engine (create an appropriate abstraction)
TODO make sure we have no-op implementations of the gas engine and electric engine
*/
public class Exercise2 {

	public static class Car {
		
		private GasEngine engine = new GasEngine();
		
		public Car() {
		}
		public Car(Engine engine){
                this.engine = engine;
                }
		public void moveForward() {
			engine.spinWheels();
		}
	}
	
	public static class GasEngine {
		public void spinWheels() {
			// no-op for now
		}

       interface Engine{
       public void spinWheels();
       }
       public GasEngine impliment Engine{
       public void spinWheels(){
       system.out.printLn("Using GasEngine")
       }
      }
       public ElectricEngine impliment Engine{
       public void spinWheels(){
       system.out.printLn("Using ElectricEngine")
       }
      }

public static void main(String args[]){
Car car = new Car(new GasEngine);
car.moveForward();
Car car1 = new Car(new ElectricEngine);
car1.moveForward();


}

      
